---
name: Release

on:
  schedule:
    - cron: '0 0 * * 1' # Every Monday at midnight
  push:
    branches:
      - 'master'
    paths:
      - 'scss/**'
      - 'views/**'
      - '**/*.go'
      - '*'
      - '.github/workflows/release.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: 'stable'

      - uses: anothrNick/github-tag-action@1.75.0
        id: bump
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          DEFAULT_BUMP: patch
          INITIAL_VERSION: 1.0.0

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build binaries
        run: |
          # Create release directory
          mkdir -p release

          # Create VERSION file
          echo "${{ steps.bump.outputs.new_tag }}" > release/VERSION

          # Set version for builds
          VERSION="${{ steps.bump.outputs.new_tag }}"
          LDFLAGS="-X video-gallery/cmd.Version=${VERSION}"

          # Build for Linux amd64
          GOOS=linux GOARCH=amd64 go build \
            -ldflags "${LDFLAGS}" \
            -o release/video-gallery-linux-amd64 .

          # Build for Linux arm64
          GOOS=linux GOARCH=arm64 go build \
            -ldflags "${LDFLAGS}" \
            -o release/video-gallery-linux-arm64 .

          # Build for macOS amd64
          GOOS=darwin GOARCH=amd64 go build \
            -ldflags "${LDFLAGS}" \
            -o release/video-gallery-darwin-amd64 .

          # Build for macOS arm64 (Apple Silicon)
          GOOS=darwin GOARCH=arm64 go build \
            -ldflags "${LDFLAGS}" \
            -o release/video-gallery-darwin-arm64 .

          # Build for Windows amd64
          GOOS=windows GOARCH=amd64 go build \
            -ldflags "${LDFLAGS}" \
            -o release/video-gallery-windows-amd64.exe .

          # Build for Windows arm64
          GOOS=windows GOARCH=arm64 go build \
            -ldflags "${LDFLAGS}" \
            -o release/video-gallery-windows-arm64.exe .

      - name: Create checksums
        run: |
          cd release
          sha256sum * > checksums.txt

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: release/*
          name: Release ${{ steps.bump.outputs.new_tag }}
          tag_name: ${{ steps.bump.outputs.new_tag }}
